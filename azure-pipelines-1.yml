# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: newsA
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'
- script:  curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
- script: sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
- script: sudo apt-get update && sudo apt-get install terraform
- script: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash



- task: TerraformCLI@0
  inputs:
    command: 'init'
    backendType: 'azurerm'
    backendServiceArm: 'Azure Pass - Sponsorship(1)(bc70b9eb-d323-46e3-af33-e98198377873)'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'newsAS'
    backendAzureRmResourceGroupLocation: 'East US'
    backendAzureRmStorageAccountName: 'newsAsds'
    backendAzureRmContainerName: 'asxsed'
    backendAzureRmKey: 'sews'
    allowTelemetryCollection: true

- task: TerraformCLI@0
  inputs:
    command: 'apply'
    environmentServiceName: 'Azure Pass - Sponsorship(1)(bc70b9eb-d323-46e3-af33-e98198377873)'
    allowTelemetryCollection: true